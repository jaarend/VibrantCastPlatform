@page "/artwork/{Id:int}"
@using global::Shared.Models.Artwork;
@using global::Shared.Models.UserAccountInfo;
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Authorization;
@using System.Text.Json.Serialization;
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager navigation


@* could add auth/unauth sections *@

@if (!isLoading)
{
    <div class="container justify-content-center p-0" style="width: 90%">
        <a href="/artwork">Portfolio</a>
        <h1 class="mt-2">@model.Title<span class="ms-3"><a href=@($"/artwork/edit/{Id}")
                    class="btn btn-outline-primary">Edit</a></span></h1>
        <div class="container justify-content-center p-0">
            <div>
                <img src="data:image/png;base64,@FullImageBase64" alt="Artwork Image" srcset="" class="img-fluid">
            </div>
            <div class="container p-0 mt-3 mb-5">
                <p class="card-text">@model.Description</p>
            </div>
        </div>

        <div class="container justify-content-center p-3" style="width: 15rem; background-color: #ddd8d8;">
            <div class="col d-flex gap-2">
                <div class="row p-2">
                    <p class="card-title">Price</p>
                </div>
                <div class="row p-2 ms-auto text-end">
                    <p class="card-text">$@model.Price</p>
                </div>
            </div>
            @* <div class="col d-flex gap-2">
        <div class="row">
        <p class="card-title">Address</p>
        </div>
        <div class="row ms-auto text-end">
        <p class="card-text">@model.Address, @model.City @model.State @model.Country @model.PostalCode</p>
        </div>
        </div> consider putting address somewhere else on this page or leave it off*@
            <div class="col d-flex gap-2">
                <div class="row p-2 ">
                    <p class="card-title">Materials</p>
                </div>
                <div class="row p-2 ms-auto text-end">
                    <p class="card-text">@model.Materials</p>
                </div>
            </div>
            <div class="col d-flex gap-2">
                <div class="row p-2">
                    <p class="card-title">Width</p>
                </div>
                <div class="row p-2 ms-auto text-end">
                    <p class="card-text">@model.Width</p>
                </div>
            </div>
            <div class="col d-flex gap-2">
                <div class="row p-2">
                    <p class="card-title">Height</p>
                </div>
                <div class="row p-2 ms-auto text-end">
                    <p class="card-text">@model.Height</p>
                </div>
            </div>
        </div>

        @* this will be information on the artist *@
        @if (userDetail != null)
        {
            var imgString = Convert.ToBase64String(userDetail.ProfileImage);

            <div class="container justify-content-center p-3" style="width: 15rem; background-color: #ddd8d8;">
                <div class="col d-flex gap-2">
                    <div class="row p-2">
                        <img src="data:image/png;base64,@imgString" alt="Profile Image" srcset="">
                    </div>
                    <div class="row p-2 ms-auto text-end">
                        <p class="card-text">$@model.Price</p>
                    </div>
                </div>
                @* <div class="col d-flex gap-2">
        <div class="row">
        <p class="card-title">Address</p>
        </div>
        <div class="row ms-auto text-end">
        <p class="card-text">@model.Address, @model.City @model.State @model.Country @model.PostalCode</p>
        </div>
        </div> consider putting address somewhere else on this page or leave it off*@
                <div class="col d-flex gap-2">
                    <div class="row p-2 ">
                        <p class="card-title">Materials</p>
                    </div>
                    <div class="row p-2 ms-auto text-end">
                        <p class="card-text">@model.Materials</p>
                    </div>
                </div>
                <div class="col d-flex gap-2">
                    <div class="row p-2">
                        <p class="card-title">Width</p>
                    </div>
                    <div class="row p-2 ms-auto text-end">
                        <p class="card-text">@model.Width</p>
                    </div>
                </div>
                <div class="col d-flex gap-2">
                    <div class="row p-2">
                        <p class="card-title">Height</p>
                    </div>
                    <div class="row p-2 ms-auto text-end">
                        <p class="card-text">@model.Height</p>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>Loading...</p>
}



@code {

    [Parameter]

    public int Id { get; set; }
    private ArtworkDetail model { get; set; }

    private UserAccountInfoDetail userDetail { get; set; }

    private string FullImageBase64
    {
        get
        {
            if (model.FullImage != null)
            {
                return Convert.ToBase64String(model.FullImage);
            }
            else
            {
                return string.Empty;
            }
        }
    }

    private bool isLoading = true;
    protected override async Task OnInitializedAsync()
    {

        //TODO: error: Unhandled exception rendering component: Object reference not set to an instance of an object.
        var userId = model.CreatorId;

        model = await Http.GetFromJsonAsync<ArtworkDetail>($"/api/artwork/{Id}");
        userDetail = await Http.GetFromJsonAsync<UserAccountInfoDetail>($"/api/profile/accountinfo/{userId}");
        isLoading = false;

    }



}