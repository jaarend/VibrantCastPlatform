@page "/artwork/delete/{Id:int}"
@using global::Shared.Models.Artwork;
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Authorization;
@using System.Text.Json.Serialization;
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager navigation
@inject AuthenticationStateProvider AuthenticationStateProvider


@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}


@if (!isLoading)
{

    @* create unauth/auth view *@

    <div class="container">
        <h1>@model.Title</h1>
        <div class="text-right justify-content-between w-100">
            <a href=@($"/artwork/edit/{Id}") class="btn btn-outline-primary">Edit</a>
            <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Artwork</a>
            <a href="/artwork">Back to all artwork</a>
        </div>
        <div class="card mt-3">
            <div class="d-flex justify-content-center align-items-center" style="height: 100%;">
                <img src="data:image/png;base64,@FullImageBase64" alt="Artwork Image" srcset="" class="img-fluid">
            </div>

        </div>

    </div>
}
else
{
    <p>Loading...</p>
}



@code {

    [Parameter]

    public int Id { get; set; }
    private ArtworkDetail model { get; set; }

    private bool isLoading = true;

    public string Message { get; set; }

    private string FullImageBase64
    {
        get
        {
            if (model.FullImage != null)
            {
                return Convert.ToBase64String(model.FullImage);
            }
            else
            {
                return string.Empty;
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        isLoading = false;
        model = await Http.GetFromJsonAsync<ArtworkDetail>($"/api/artwork/{Id}");

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userIdClaim = authState.User.FindFirst("sub");

        //check if logged in and is the creator of artwork
        if (userIdClaim != null)
        {
            var userId = userIdClaim.Value;

            if (userId == model.CreatorId)
            {
                return;
            }
            else
            {
                navigation.NavigateTo($"/");
            }
        }
        else
        {
            navigation.NavigateTo($"/");
        }


    }

    private async void HandleClick()
    {
        var response = await Http.DeleteAsync($"/api/artwork/{Id}");

        if (response.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/artwork");
        }
        else
        {
            Message = "Failed to delete note.";
        }
    }



}