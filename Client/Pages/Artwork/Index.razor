@page "/artwork"
@using global::Shared.Models.Artwork;
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Authorization;
@using System.Text.Json.Serialization;
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager navigation

<PageTitle>Your Artwork</PageTitle>

<h2>All Your Artwork</h2>

<a href="/artwork/create" class="btn btn-primary">Upload Art</a>


@if (_artworks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>Image</th>
                <th>Title</th>
                <th>Description</th>
                <th>Width</th>
                <th>Height</th>
                <th>Price</th>


            </tr>
        </thead>
        <tbody>
            @foreach (var artwork in _artworks)
            {
                <tr>
                    <td>
                        @{
                            var imgString = Convert.ToBase64String(artwork.FullImage);
                        }
                        <div class="card col-md-8 mx-auto m-3" style="width: 18rem;">
                            <a href="@($"/artwork/public/{artwork.Id}")">
                                <img src="data:image/png;base64,@imgString" alt="Artwork Image" srcset="" class="card-img-top">
                            </a>
                        </div>
                    </td>
                    <td>
                        <strong>@artwork.Title</strong>
                        <div class="text-center justify-content-between w-25">
                            <a href=@($"/artwork/edit/{artwork.Id}") class="btn btn-outline-primary">Edit</a>
                            @* add the delete page *@
                            <a href=@($"/artwork/delete/{artwork.Id}") class="btn btn-outline-danger">Delete</a>
                        </div>
                    </td>
                    <td>
                        @artwork.Description
                    </td>
                    <td>
                        @artwork.Width
                    </td>
                    <td>
                        @artwork.Height
                    </td>
                    <td>
                        @artwork.Price
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    private IEnumerable<ArtworkDetail> _artworks;

    protected override async Task OnInitializedAsync()
    {
        _artworks = await Http.GetFromJsonAsync<List<ArtworkDetail>>("api/artwork");
    }


}
