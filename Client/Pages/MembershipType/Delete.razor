@page "/memberships/delete/{Id:int}"
@using global::Shared.Models.MembershipType;
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager navigation

<PageTitle>Delete Membership</PageTitle>

<h1>Membership</h1>

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

@if (!isLoading)
{

    <div class="container">
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="model.Name" />
                <label>Description</label>
                <InputText class="form-control" @bind-Value="model.Description" />
                <label>Montly Price</label>
                <InputNumber class="form-control" @bind-Value="model.MonthlyAmount" />
                <label>Yearly Price</label>
                <InputNumber class="form-control" @bind-Value="model.YearlyAmount" />
                <label>Artwork Limit</label>
                <InputNumber class="form-control" @bind-Value="model.ArtworkLimit" />
                <label>Experience Limit</label>
                <InputNumber class="form-control" @bind-Value="model.ExperiencesLimit" />
            </div>
            <h3>Are you sure? This is permanente!</h3>
            <button type="submit" class="btn btn-danger btn-block mt-5"> DELETE </button>
        </EditForm>
    </div>
}
else
{
    <p>Loading...</p>
}



@code {

    [Parameter]
    public int Id { get; set; }
    private MembershipTypeDetail model { get; set; }

    private string errorMessage;

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        model = await Http.GetFromJsonAsync<MembershipTypeDetail>($"/api/membershiptype/{Id}");
        isLoading = false;
    }

    private async void HandleSubmit()
    {
        var createResponse = await Http.DeleteAsync($"api/membershiptype/delete/{Id}");

        if (createResponse.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/memberships");
        }
        else
        {
            errorMessage = "Could not update account information right now. Please try again.";
        }
    }

}